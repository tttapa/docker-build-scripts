name: Docker

on:
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  PLATFORMS: linux/amd64
  #,linux/arm64

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy3.7', 'pypy3.8', 'pypy3.9']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#      # Add ARM emulation support
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # # alpaqa Python build ----------------------------------------------------

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta-alpaqa-python-build
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/tttapa/alpaqa-python-build
      #     flavor: |
      #       latest=${{ matrix.python-version == '3.10' }}
      #       prefix=py${{ matrix.python-version }}-
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=raw,value=py${{ matrix.python-version }},prefix=

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push-alpaqa-python-build
      #   uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      #   with:
      #     context: .
      #     platforms: ${{ env.PLATFORMS }}
      #     target: alpaqa-python-build
      #     build-args: |
      #       "PYTHON_VERSION=${{ matrix.python-version }}"
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta-alpaqa-python-build.outputs.tags }}
      #     labels: ${{ steps.meta-alpaqa-python-build.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # # alpaqa build static ----------------------------------------------------

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta-alpaqa-build-static
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/tttapa/alpaqa-build-static
      #     flavor: |
      #       latest=${{ matrix.python-version == '3.10' }}
      #       prefix=py${{ matrix.python-version }}-
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=raw,value=py${{ matrix.python-version }},prefix=

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push-alpaqa-build-static
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      #   with:
      #     context: .
      #     platforms: ${{ env.PLATFORMS }}
      #     target: alpaqa-build-static
      #     build-args: |
      #       "PYTHON_VERSION=${{ matrix.python-version }}"
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta-alpaqa-build-static.outputs.tags }}
      #     labels: ${{ steps.meta-alpaqa-build-static.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # # alpaqa build -----------------------------------------------------------

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta-alpaqa-build
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/tttapa/alpaqa-build
      #     flavor: |
      #       latest=${{ matrix.python-version == '3.10' }}
      #       prefix=py${{ matrix.python-version }}-
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=raw,value=py${{ matrix.python-version }},prefix=

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push-alpaqa-build
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      #   with:
      #     context: .
      #     platforms: ${{ env.PLATFORMS }}
      #     target: alpaqa-build
      #     build-args: |
      #       "PYTHON_VERSION=${{ matrix.python-version }}"
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta-alpaqa-build.outputs.tags }}
      #     labels: ${{ steps.meta-alpaqa-build.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # alpaqa docs ------------------------------------------------------------

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-alpaqa-docs
        if: ${{ matrix.python-version == '3.10' }}
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/tttapa/alpaqa-docs
          flavor: |
            latest=${{ matrix.python-version == '3.10' }}
            prefix=py${{ matrix.python-version }}-
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=py${{ matrix.python-version }},prefix=

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push-alpaqa-docs
        if: ${{ matrix.python-version == '3.10' }}
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          target: alpaqa-docs
          build-args: |
            "PYTHON_VERSION=${{ matrix.python-version }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-alpaqa-docs.outputs.tags }}
          labels: ${{ steps.meta-alpaqa-docs.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # # alpaqa test static -----------------------------------------------------

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta-alpaqa-test-static
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/tttapa/alpaqa-test-static
      #     flavor: |
      #       latest=${{ matrix.python-version == '3.10' }}
      #       prefix=py${{ matrix.python-version }}-
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=raw,value=py${{ matrix.python-version }},prefix=

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push-alpaqa-test-static
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      #   with:
      #     context: .
      #     platforms: ${{ env.PLATFORMS }}
      #     target: alpaqa-test-static
      #     build-args: |
      #       "PYTHON_VERSION=${{ matrix.python-version }}"
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta-alpaqa-test-static.outputs.tags }}
      #     labels: ${{ steps.meta-alpaqa-test-static.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # # alpaqa test ------------------------------------------------------------

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta-alpaqa-test
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/tttapa/alpaqa-test
      #     flavor: |
      #       latest=${{ matrix.python-version == '3.10' }}
      #       prefix=py${{ matrix.python-version }}-
      #     tags: |
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=raw,value=py${{ matrix.python-version }},prefix=

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push-alpaqa-test
      #   if: ${{ matrix.python-version == '3.10' }}
      #   uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      #   with:
      #     context: .
      #     platforms: ${{ env.PLATFORMS }}
      #     target: alpaqa-test
      #     build-args: |
      #       "PYTHON_VERSION=${{ matrix.python-version }}"
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta-alpaqa-test.outputs.tags }}
      #     labels: ${{ steps.meta-alpaqa-test.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
